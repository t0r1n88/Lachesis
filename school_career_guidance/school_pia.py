"""
Скритп для обработки результатов теста Профессиональная идентичность Азбель
"""
import pandas as pd
from tkinter import messagebox
from lachesis_support_functions import round_mean, sort_name_class


class BadOrderPIA(Exception):
    """
    Исключение для обработки случая когда колонки не совпадают
    """
    pass




class BadValuePIA(Exception):
    """
    Исключение для неправильных значений в вариантах ответов
    """
    pass


class BadCountColumnsPIA(Exception):
    """
    Исключение для обработки случая если количество колонок не равно 20
    """
    pass



def processing_pia(base_df: pd.DataFrame, answers_df: pd.DataFrame):
    """
        Фугкция для обработки данных профессиональной идентичности
        :return:
        """

    out_answer_df = base_df.copy()  # делаем копию для последующего соединения с сырыми ответами
    if answers_df.shape[1] != 20:
        raise BadCountColumnsPIA

    lst_check_cols = ['Меня не беспокоит мое профессиональное будущее','Мне трудно принять решение, куда пойти получать дальнейшее образование',
                      'Я регулярно изучаю спрос на представителей той специальности, которую я планирую получить','Я до сих пор не обсуждал с родителями свои будущие профессиональные планы',
                      'Мои родители выбрали мне будущую специальность','Мне хорошо ясны свои будущие профессиональные планы',
                      'На мои профессиональные цели сильно влияет мнение моих родителей','Думаю, мне еще слишком рано задумываться над вопросами построения своей карьеры',
                      'Уже точно решено, какую специальность я хочу получить после окончания школы','Друзья советуют мне, какое образование лучше получить',
                      'Для меня не принципиально, где именно учиться в дальнейшем','Я боюсь без совета своих родителей принимать ответственные решения по поводу моей дальнейшей профессиональной деятельности',
                      'Я не часто думаю над своим профессиональным будущим','У меня на примете несколько учебных заведений, куда я мог бы пойти учиться',
                      'Никакие жизненные проблемы не смогут мне помешать достигнуть поставленных профессиональных целей','У нас дома часто разгораются бурные дискуссии по поводу моей будущей карьеры',
                      'Меня мало интересует информация о том, как выстраивать карьеру в различных профессиональных областях','Я держу на примете несколько профессиональных целей',
                      'Я очень хорошо представляю свой дальнейший карьерный рост','Родители предоставили мне возможность сделать свой профессиональный выбор самостоятельно',
                      ]


    # Проверяем порядок колонок
    order_main_columns = lst_check_cols  # порядок колонок и названий как должно быть
    order_temp_df_columns = list(answers_df.columns)  # порядок колонок проверяемого файла
    error_order_lst = []  # список для несовпадающих пар
    # Сравниваем попарно колонки
    for main, temp in zip(order_main_columns, order_temp_df_columns):
        if main != temp:
            error_order_lst.append(f'На месте колонки {main} находится колонка {temp}')
            error_order_message = ';'.join(error_order_lst)
    if len(error_order_lst) != 0:
        raise BadOrderPIA

    valid_values = ['','',]


    # Проверяем, есть ли значения, отличающиеся от указанных в списке
    mask = ~answers_df.isin(valid_values)

    # Получаем строки с отличающимися значениями
    result_check = answers_df[mask.any(axis=1)]
    if len(result_check) != 0:
        error_row = list(map(lambda x: x + 2, result_check.index))
        error_row = list(map(str, error_row))
        error_message = ';'.join(error_row)
        raise BadValuePIA



