"""
Скрипт для обработки теста Диагностика уровня эмоционального выгорания В.В.Бойко исходная версия
"""
import pandas as pd
import re
from tkinter import messagebox
from lachesis_support_functions import round_mean,create_svod_sub



class BadOrderBEB(Exception):
    """
    Исключение для обработки случая когда колонки не совпадают
    """
    pass


class BadValueBEB(Exception):
    """
    Исключение для неправильных значений в вариантах ответов
    """
    pass

class BadCountColumnsBEB(Exception):
    """
    Исключение для обработки случая если количество колонок не равно 84
    """
    pass


def calc_level_sub(value):
    """
    Функция для подсчета уровня
    :param value:
    :return:
    """
    if 0 <= value <= 9:
        return 'не сложившийся симптом'
    elif 10 <= value <= 15:
        return 'складывающийся симптом'
    elif 16 <= value <= 19:
        return 'сложившийся симптом'
    else:
        return 'доминирующий симптом'

def calc_level_phase(value):
    """
    Функция для подсчета уровня
    :param value:
    :return:
    """
    if 0 <= value <= 36:
        return 'фаза не сформировалась'
    elif 37 <= value <= 60:
        return 'фаза в стадии формирования'
    else:
        return 'сформировавшаяся фаза'



def calc_sub_value_ppo(row):
    """
    Функция для подсчета значения субшкалы Переживание психотравмирующих обстоятельств
    :param row: строка с ответами
    :return: число
    """
    lst_pr = [1,13,25,37,49,61,73] # вопросы
    result = 0 # результат
    for idx, value in enumerate(row):
        if idx +1 in lst_pr:
            if idx + 1 == 1: # Вопрос 1
                if value == 'да':
                    result += 2
            elif idx + 1 == 13: # Вопрос 13
                if value == 'да':
                    result += 3
            elif idx + 1 == 25: # Вопрос 25
                if value == 'да':
                    result += 2
            elif idx + 1 == 37: # Вопрос 37
                if value == 'нет':
                    result += 3
            elif idx + 1 == 49: # Вопрос 49
                if value == 'да':
                    result += 10
            elif idx + 1 == 61: # Вопрос 61
                if value == 'да':
                    result += 5
            elif idx + 1 == 73: # Вопрос 73
                if value == 'нет':
                    result += 5
    return result


def calc_sub_value_ns(row):
    """
    Функция для подсчета значения субшкалы Неудовлетворенность собой
    :param row: строка с ответами
    :return: число
    """
    lst_pr = [2,14,26,38,50,62,74] # вопросы
    result = 0 # результат
    for idx, value in enumerate(row):
        if idx +1 in lst_pr:
            if idx + 1 == 2: # Вопрос 2
                if value == 'нет':
                    result += 3
            elif idx + 1 == 14: # Вопрос 14
                if value == 'да':
                    result += 2
            elif idx + 1 == 26: # Вопрос 26
                if value == 'да':
                    result += 2
            elif idx + 1 == 38: # Вопрос 38
                if value == 'нет':
                    result += 10
            elif idx + 1 == 50: # Вопрос 50
                if value == 'нет':
                    result += 5
            elif idx + 1 == 62: # Вопрос 62
                if value == 'да':
                    result += 5
            elif idx + 1 == 74: # Вопрос 74
                if value == 'да':
                    result += 3
    return result

def calc_sub_value_zk(row):
    """
    Функция для подсчета значения субшкалы «Загнанность в клетку»
    :param row: строка с ответами
    :return: число
    """
    lst_pr = [3,15,27,39,51,63,75] # вопросы
    result = 0 # результат
    for idx, value in enumerate(row):
        if idx +1 in lst_pr:
            if idx + 1 == 3: # Вопрос 3
                if value == 'да':
                    result += 10
            elif idx + 1 == 15: # Вопрос 15
                if value == 'да':
                    result += 5
            elif idx + 1 == 27: # Вопрос 27
                if value == 'да':
                    result += 2
            elif idx + 1 == 39: # Вопрос 39
                if value == 'да':
                    result += 2
            elif idx + 1 == 51: # Вопрос 51
                if value == 'да':
                    result += 5
            elif idx + 1 == 63: # Вопрос 63
                if value == 'да':
                    result += 1
            elif idx + 1 == 75: # Вопрос 75
                if value == 'нет':
                    result += 5
    return result


def calc_sub_value_td(row):
    """
    Функция для подсчета значения субшкалы Тревога и депрессия
    :param row: строка с ответами
    :return: число
    """
    lst_pr = [4,16,28,40,52,64,76] # вопросы
    result = 0 # результат
    for idx, value in enumerate(row):
        if idx +1 in lst_pr:
            if idx + 1 == 4: # Вопрос 4
                if value == 'да':
                    result += 2
            elif idx + 1 == 16: # Вопрос 16
                if value == 'да':
                    result += 3
            elif idx + 1 == 28: # Вопрос 28
                if value == 'да':
                    result += 5
            elif idx + 1 == 40: # Вопрос 40
                if value == 'да':
                    result += 5
            elif idx + 1 == 52: # Вопрос 52
                if value == 'да':
                    result += 10
            elif idx + 1 == 64: # Вопрос 64
                if value == 'да':
                    result += 2
            elif idx + 1 == 76: # Вопрос 76
                if value == 'да':
                    result += 3


    return result


def calc_sub_value_niar(row):
    """
    Функция для подсчета значения субшкалы Неадекватное избирательное эмоциональное реагирование
    :param row: строка с ответами
    :return: число
    """
    lst_pr = [5,17,29,41,53,65,77] # вопросы
    result = 0 # результат
    for idx, value in enumerate(row):
        if idx +1 in lst_pr:
            if idx + 1 == 5: # Вопрос 5
                if value == 'да':
                    result += 5
            elif idx + 1 == 17: # Вопрос 17
                if value == 'нет':
                    result += 3
            elif idx + 1 == 29: # Вопрос 29
                if value == 'да':
                    result += 10
            elif idx + 1 == 41: # Вопрос 41
                if value == 'да':
                    result += 2
            elif idx + 1 == 53: # Вопрос 53
                if value == 'да':
                    result += 2
            elif idx + 1 == 65: # Вопрос 65
                if value == 'да':
                    result += 3
            elif idx + 1 == 77: # Вопрос 77
                if value == 'да':
                    result += 5



    return result


def calc_sub_value_and(row):
    """
    Функция для подсчета значения субшкалы Эмоционально-нравственная дезориентация
    :param row: строка с ответами
    :return: число
    """
    lst_pr = [6,18,30,42,54,66,78] # вопросы
    result = 0 # результат
    for idx, value in enumerate(row):
        if idx +1 in lst_pr:
            if idx + 1 == 6: # Вопрос 6
                if value == 'да':
                    result += 10
            elif idx + 1 == 18: # Вопрос 18
                if value == 'нет':
                    result += 3
            elif idx + 1 == 30: # Вопрос 30
                if value == 'да':
                    result += 3
            elif idx + 1 == 42: # Вопрос 42
                if value == 'да':
                    result += 5
            elif idx + 1 == 54: # Вопрос 54
                if value == 'да':
                    result += 2
            elif idx + 1 == 66: # Вопрос 66
                if value == 'да':
                    result += 2
            elif idx + 1 == 78: # Вопрос 78
                if value == 'нет':
                    result += 5




    return result


def calc_sub_value_rsaa(row):
    """
    Функция для подсчета значения субшкалы Расширение сферы экономии эмоций
    :param row: строка с ответами
    :return: число
    """
    lst_pr = [7,19,31,43,55,67,79] # вопросы
    result = 0 # результат
    for idx, value in enumerate(row):
        if idx +1 in lst_pr:
            if idx + 1 == 7: # Вопрос 7
                if value == 'да':
                    result += 2
            elif idx + 1 == 19: # Вопрос 19
                if value == 'да':
                    result += 10
            elif idx + 1 == 31: # Вопрос 31
                if value == 'нет':
                    result += 2
            elif idx + 1 == 43: # Вопрос 43
                if value == 'да':
                    result += 5
            elif idx + 1 == 55: # Вопрос 55
                if value == 'да':
                    result += 3
            elif idx + 1 == 67: # Вопрос 67
                if value == 'да':
                    result += 3
            elif idx + 1 == 79: # Вопрос 79
                if value == 'нет':
                    result += 5




    return result


def calc_sub_value_rpo(row):
    """
    Функция для подсчета значения субшкалы Редукция профессиональных обязанностей
    :param row: строка с ответами
    :return: число
    """
    lst_pr = [8,20,32,44,56,68,80] # вопросы
    result = 0 # результат
    for idx, value in enumerate(row):
        if idx +1 in lst_pr:
            if idx + 1 == 8: # Вопрос 8
                if value == 'да':
                    result += 5
            elif idx + 1 == 20: # Вопрос 20
                if value == 'да':
                    result += 5
            elif idx + 1 == 32: # Вопрос 32
                if value == 'да':
                    result += 2
            elif idx + 1 == 44: # Вопрос 44
                if value == 'нет':
                    result += 2
            elif idx + 1 == 56: # Вопрос 56
                if value == 'да':
                    result += 3
            elif idx + 1 == 68: # Вопрос 68
                if value == 'да':
                    result += 3
            elif idx + 1 == 80: # Вопрос 80
                if value == 'да':
                    result += 10



    return result







def processing_boiko_emotional_burnout(base_df: pd.DataFrame, answers_df: pd.DataFrame, lst_svod_cols:list):
    """
    Функция для обработки
    :param base_df: часть датафрейма с описательными колонками
    :param answers_df: часть датафрейма с ответами
    :param lst_svod_cols:  список с колонками по которым нужно делать свод
    """
    out_answer_df = base_df.copy()  # делаем копию для последующего соединения с сырыми ответами
    if len(answers_df.columns) != 84:  # проверяем количество колонок с вопросами
        raise BadCountColumnsBEB

    lst_check_cols = ['Организационные недостатки на работе постоянно заставляют нервничать, переживать, напрягаться.',
                      'Сегодня я доволен(а) своей профессией не меньше, чем в начале карьеры.',
                      'Я ошибся(лась) в выборе профессии или профиля деятельности (занимаю не свое место).',
                      'Меня беспокоит то, что я стал(а) хуже работать (менее продуктивно, качественно, медленнее).',
                      'Теплота взаимодействия с партнерами очень зависит от моего настроения - хорошего или плохого.',
                      'От меня как профессионала мало зависит благополучие партнера.',
                      'Когда я прихожу с работы домой, то некоторое время (часа 2-3) мне хочется побыть наедине, чтобы со мной никто не общался.',
                      'Когда я чувствую усталость или напряжение, то стараюсь поскорее решить проблемы партнера (свернуть взаимодействие).',
                      'Мне кажется, что эмоционально я не могу дать партнерам того, что требует профессиональный долг.',
                      'Моя работа притупляет эмоции.',
                      'Я откровенно устал(а) от человеческих проблем, с которыми приходится иметь дело на работе.',
                      'Бывает, я плохо засыпаю (сплю) из-за переживаний, связанных с работой.',
                      'Взаимодействие с партнерами требует от меня большого напряжения.',
                      'Работа с людьми приносит мне все меньше удовлетворения.',
                      'Я бы сменил(а) место работы, если бы представилась возможность.',
                      'Меня часто расстраивает то, что я не могу должным образом оказать партнеру профессиональную поддержку, услугу, помощь.',
                      'Мне всегда удается предотвратить влияние плохого настроения на деловые контакты.',
                      'Меня очень огорчает, если что-то не ладится в отношениях с деловым партнером.',
                      'Я настолько устаю на работе, что дома стараюсь общаться как можно меньше.',
                      'Из-за нехватки времени, усталости или напряжения часто уделяю внимание партнеру меньше, чем положено.',
                      'Иногда самые обычные ситуации общения на работе вызывают раздражение.',
                      'Я спокойно воспринимаю обоснованные претензии партнеров.',
                      'Общение с партнерами побудило меня сторониться людей.',
                      'При воспоминании о некоторых коллегах по работе или партнерах у меня портится настроение.',
                      'Конфликты или разногласия с коллегами отнимают много сил и эмоций.',
                      'Мне все труднее устанавливать или поддерживать контакты с деловыми партнерами.',
                      'Обстановка на работе мне кажется очень трудной, сложной.',
                      'У меня часто возникают тревожные ожидания, связанные с работой: что-то должно случиться, как бы не допустить ошибки, смогу ли я сделать все как надо, не сократят ли и т. д.',
                      'Если партнер мне неприятен, я стараюсь ограничить время общения с ним или меньше уделять ему внимания.',
                      'В общении не работе я придерживаюсь принципа: «не делай людям добра, не получишь зла».',
                      'Я охотно рассказываю домашним о своей работе.',
                      'Бывают дни, когда мое эмоциональное состояние плохо сказывается на результатах работы (меньше делаю, снижается качество, случаются конфликты).',
                      'Порой я чувствую, что надо проявить к партнеру эмоциональную отзывчивость, но не могу.',
                      'Я очень переживаю за свою работу.',
                      'Партнерам по работе отдаешь внимания и заботы больше, чем получаешь от них признательности.',
                      'При мысли о работе мне обычно становится не по себе начинает колоть в области сердца, повышается давление, появляется головная боль.',
                      'У меня хорошие (вполне удовлетворительные) отношения с непосредственным руководителем.',
                      'Я часто радуюсь, видя, что моя работа приносит пользу людям.',
                      'Последнее время (или как всегда) меня преследуют неудачи на работе.',
                      'Некоторые стороны (факты) моей работы вызывают глубокое разочарование, повергают в уныние.',
                      'Бывают дни, когда контакты с партнерами складываются хуже, чем обычно.',
                      'Я разделяю деловых партнеров (субъектов деятельности) на приятных и неприятных.',
                      'Усталость от работы приводит к тому, что я стараюсь сократить общение с друзьями и знакомыми.',
                      'Я обычно проявляю интерес к личности партнера помимо того) что касается дела.',
                      'Обычно я прихожу на работу отдохнувшим, со свежими силами, в хорошем настроении.',
                      'Я иногда ловлю себя на том, что работаю с партнерами автоматически, без души.',
                      'На работе встречаются настолько неприятные люди, что невольно желаешь им чего-нибудь плохого.',
                      'После общения с неприятными партнерами у меня бывает ухудшение психического и физического самочувствия.',
                      'На работе я испытываю постоянные физические и психические перегрузки.',
                      'Успехи в работе вдохновляют меня.',
                      'Ситуация на работе, в которой я оказался, кажется безысходной.',
                      'Я потерял(а) покой из-за работы.',
                      'На протяжении последнего года были жалобы (была жалоба) в мой адрес со стороны партнеров.',
                      'Мне удается беречь нервы благодаря тому, что многое происходящее с партнерами я не принимаю близко к сердцу.',
                      'Я часто с работы приношу домой отрицательные эмоции.',
                      'Я часто работаю через силу.',
                      'Прежде я был(а) более отзывчивым и внимательным к партнерам, чем теперь.',
                      'В работе с людьми руководствуюсь принципом: не трать нервы, береги здоровье.',
                      'Иногда иду на работу с тяжелым чувством: как все надоело, никого бы не видеть и не слышать.',
                      'После напряженного рабочего дня я чувствую недомогание.',
                      'Контингент партеров, с которыми я работаю, очень трудный.',
                      'Иногда мне кажется, что результаты моей работы не стоят тех усилий, которые я затрачиваю.',
                      'Если бы мне повезло с работой, я был(а) бы более счастлив.',
                      'Я в отчаянии оттого, что на работе у меня серьезные проблемы.',
                      'Иногда я поступаю со своими партнерами так, как не хотел бы, чтобы поступали со мною.',
                      'Я осуждаю партеров, которые рассчитывают на особое снисхождение, внимание.',
                      'Чаще всего после рабочего дня у меня нет сил заниматься домашними делами.',
                      'Обычно я тороплю время: скорей бы рабочий день кончился.',
                      'Состояния, просьбы, потребности партнеров обычно меня искренне волнуют.',
                      'Работая с людьми, я обычно как бы ставлю экран, защищающий меня от чужих страданий, и отрицательных эмоций.',
                      'Работа с людьми (партнерами) очень разочаровала меня.',
                      'Чтобы восстановить силы, я часто принимаю лекарства.',
                      'Как правило, мой рабочий день проходит спокойно и легко.',
                      'Мои требования к выполняемой работе выше, чем то, чего я - достигаю в силу обстоятельств.',
                      'Моя карьера сложилась удачно.',
                      'Я очень нервничаю из-за всего, что связано с работой.',
                      'Некоторых из своих постоянных партнеров я не хотел(а) бы видеть и слышать.',
                      'Я одобряю коллег, которые полностью посвящают себя людям (партнерам), забывая о собственных интересах.',
                      'Моя усталость на работе обычно мало сказывается (никак не сказывается) в общении с домашними и друзьями.',
                      'Если предоставляется случай, я уделяю партнеру меньше внимания, но так, чтобы он этого не заметил.',
                      'Меня часто подводят нервы в общении с людьми на работе.',
                      'Ко всему (почти ко всему), что происходит на работе, я утратил(а) интерес, живое чувство.',
                      'Работа с людьми плохо повлияла на меня как профессионала - обозлила, сделала нервным(ой), притупила эмоции.',
                      'Работа с людьми явно подрывает мое здоровье.',
                      ]

    # Проверяем порядок колонок
    order_main_columns = lst_check_cols  # порядок колонок и названий как должно быть
    order_temp_df_columns = list(answers_df.columns)  # порядок колонок проверяемого файла
    error_order_lst = []  # список для несовпадающих пар
    # Сравниваем попарно колонки
    for main, temp in zip(order_main_columns, order_temp_df_columns):
        if main != temp:
            error_order_lst.append(f'На месте колонки {main} находится колонка {temp}')
            error_order_message = ';'.join(error_order_lst)
    if len(error_order_lst) != 0:
        raise BadOrderBEB

    valid_values = ['да', 'нет']
    # Проверяем, есть ли значения, отличающиеся от указанных в списке
    lst_error_answers = []  # список для хранения строк где найдены неправильные ответы

    for i in range(84):
        mask = ~answers_df.iloc[:, i].isin(valid_values)  # проверяем на допустимые значения
        result_check = answers_df.iloc[:, i][mask]
        if len(result_check) != 0:
            error_row = list(map(lambda x: x + 2, result_check.index))
            error_row = list(map(str, error_row))
            error_row_lst = [f'В {i + 1} вопросной колонке на строке {value}' for value in error_row]
            error_in_column = ','.join(error_row_lst)
            lst_error_answers.append(error_in_column)

    if len(lst_error_answers) != 0:
        error_message = ';'.join(lst_error_answers)
        raise BadValueBEB

    # Симптом Переживание психотравмирующих обстоятельств
    base_df['Значение_симптома_Переживание_психотравмирующих_обстоятельств'] = answers_df.apply(calc_sub_value_ppo, axis=1)
    base_df['Норма_Переживание_психотравмирующих_обстоятельств'] = '0-9 баллов'
    base_df['Уровень_симптома_Переживание_психотравмирующих_обстоятельств'] = base_df[
        'Значение_симптома_Переживание_психотравмирующих_обстоятельств'].apply(
        calc_level_sub)

    # Симптом Неудовлетворенность собой
    base_df['Значение_симптома_Неудовлетворенность_собой'] = answers_df.apply(calc_sub_value_ns, axis=1)
    base_df['Норма_Неудовлетворенность_собой'] = '0-9 баллов'
    base_df['Уровень_симптома_Неудовлетворенность_собой'] = base_df[
        'Значение_симптома_Неудовлетворенность_собой'].apply(
        calc_level_sub)

    # Симптом «Загнанность в клетку»
    base_df['Значение_симптома_Загнанность_в_клетку'] = answers_df.apply(calc_sub_value_zk, axis=1)
    base_df['Норма_Загнанность_в_клетку'] = '0-9 баллов'
    base_df['Уровень_симптома_Загнанность_в_клетку'] = base_df[
        'Значение_симптома_Загнанность_в_клетку'].apply(
        calc_level_sub)

    # Симптом Тревога и депрессия
    base_df['Значение_симптома_Тревога_и_депрессия'] = answers_df.apply(calc_sub_value_td, axis=1)
    base_df['Норма_Тревога_и_депрессия'] = '0-9 баллов'
    base_df['Уровень_симптома_Тревога_и_депрессия'] = base_df[
        'Значение_симптома_Тревога_и_депрессия'].apply(
        calc_level_sub)

    # Фаза Напряжение
    base_df['Значение_фазы_Напряжение'] = base_df[['Значение_симптома_Переживание_психотравмирующих_обстоятельств',
                                                   'Значение_симптома_Неудовлетворенность_собой',
                                                   'Значение_симптома_Загнанность_в_клетку','Значение_симптома_Тревога_и_депрессия']].sum(axis=1)

    base_df['Уровень_фазы_Напряжение'] = base_df[
        'Значение_фазы_Напряжение'].apply(calc_level_phase)


    # 2 фаза
    # Симптом Неадекватное избирательное эмоциональное реагирование
    base_df['Значение_симптома_Неадекватное_избирательное_эмоциональное_реагирование'] = answers_df.apply(calc_sub_value_niar, axis=1)
    base_df['Норма_Неадекватное_избирательное_эмоциональное_реагирование'] = '0-9 баллов'
    base_df['Уровень_симптома_Неадекватное_избирательное_эмоциональное_реагирование'] = base_df[
        'Значение_симптома_Неадекватное_избирательное_эмоциональное_реагирование'].apply(
        calc_level_sub)

    # Симптом Эмоционально-нравственная дезориентация
    base_df['Значение_симптома_Эмоционально_нравственная_дезориентация'] = answers_df.apply(calc_sub_value_and, axis=1)
    base_df['Норма_Эмоционально_нравственная_дезориентация'] = '0-9 баллов'
    base_df['Уровень_симптома_Эмоционально_нравственная_дезориентация'] = base_df[
        'Значение_симптома_Эмоционально_нравственная_дезориентация'].apply(
        calc_level_sub)

    # Симптом Расширение сферы экономии эмоций
    base_df['Значение_симптома_Расширение_сферы_экономии_эмоций'] = answers_df.apply(calc_sub_value_rsaa, axis=1)
    base_df['Норма_Расширение_сферы_экономии_эмоций'] = '0-9 баллов'
    base_df['Уровень_симптома_Расширение_сферы_экономии_эмоций'] = base_df[
        'Значение_симптома_Расширение_сферы_экономии_эмоций'].apply(
        calc_level_sub)

    # Симптом Редукция профессиональных обязанностей
    base_df['Значение_симптома_Редукция_профессиональных_обязанностей'] = answers_df.apply(calc_sub_value_rpo, axis=1)
    base_df['Норма_Редукция_профессиональных_обязанностей'] = '0-9 баллов'
    base_df['Уровень_симптома_Редукция_профессиональных_обязанностей'] = base_df[
        'Значение_симптома_Редукция_профессиональных_обязанностей'].apply(
        calc_level_sub)


    # Фаза РЕЗИСТЕНЦИЯ
    base_df['Значение_фазы_Резистенция'] = base_df[['Значение_симптома_Неадекватное_избирательное_эмоциональное_реагирование',
                                                   'Значение_симптома_Эмоционально_нравственная_дезориентация',
                                                   'Значение_симптома_Расширение_сферы_экономии_эмоций',
                                                    'Значение_симптома_Редукция_профессиональных_обязанностей']].sum(axis=1)

    base_df['Уровень_фазы_Резистенция'] = base_df[
        'Значение_фазы_Резистенция'].apply(calc_level_phase)









    base_df.to_excel('res.xlsx')








