"""
Скрипт для обработки результатов теста ДДО Дифференциально диагностический опросник
"""
import pandas as pd
from tkinter import messagebox
from lachesis_support_functions import round_mean, sort_name_class


class BadValueDDO(Exception):
    """
    Исключение для неправильных значений в вариантах ответов
    """
    pass


class BadCountColumnsDDO(Exception):
    """
    Исключение для обработки случая если количество колонок не равно 30
    """
    pass


def calc_level_ddo(value):
    """
    Функция для подсчета уровня склонности к то или иной сфере
    """
    if 0 <= value <= 1:
        return 'работа с таким предметом труда активно отвергается'
    elif 2 <= value <= 3:
        return 'склонность не выражена'
    elif 4 <= value <= 6:
        return 'склонность на среднем уровне'
    elif 7 <= value <= 8:
        return 'выраженная склонность'
    elif 9 <= value <= 10:
        return 'ярко выраженная склонность'




def extract_key_max_value(cell: str) -> str:
    """
    Функция для извлечения ключа с максимальным значением
    :param cell: строка формата ключ - значение;
    :return: ключ словаря в формате строки
    """
    # проверяем если некорректное значение
    if 'Скопируйте правильные значения для указанных вопросов из квадратных скобок' in cell:
        return cell
    dct_result = {}
    cell = cell.replace('\n', '')  # убираем переносы
    lst_temp = cell.split(';')  # сплитим по точке с запятой
    for result in lst_temp:
        # отбрасываем пустую строку
        if result:
            key, value = result.split(': ')  # извлекаем ключ и значение
            dct_result[key] = int(value)

    # возвращаем элемент с максимальным значением
    return max(dct_result, key=dct_result.get)


def extract_max_value(cell: str):
    """
    Функция для извлечения значения ключа с максимальным значением , ха звучит странно
    :param cell: строка формата ключ - значение;
    :return: ключ словаря в формате строки
    """
    # проверяем если некорректное значение
    if 'Скопируйте правильные значения для указанных вопросов из квадратных скобок' in cell:
        return 0
    dct_result = {}
    cell = cell.replace('\n', '')  # убираем переносы
    lst_temp = cell.split(';')  # сплитим по точке с запятой
    for result in lst_temp:
        # отбрасываем пустую строку
        if result:
            key, value = result.split(': ')  # извлекаем ключ и значение
            dct_result[key] = int(value)

    # возвращаем элемент с максимальным значением
    return dct_result[max(dct_result, key=dct_result.get)]


def create_out_str_ddo(x, dct_desciprion, dct_prof):
    """
    Функция для создания выходной строки ДДО
    """
    return f'{dct_desciprion.get(x, "Проверьте правильность написания ответа в форме,в колонке ДДО_Обработанный_результат указаны несовпадающие значения")}\nРекомендуемые профессии:\n{dct_prof.get(x, "Проверьте правильность написания ответа в форме,в колонке ДДО_Обработанный_результат указаны несовпадающие значения")}'


def processing_result_ddo(row):
    """
    Обработка результатов тестирования ДДО
    """

    # # Создаем словарь для хранения данных
    dct_type = {'Человек-природа': 0, 'Человек-техника': 0, 'Человек-другой человек': 0, 'Человек-знаковая система': 0,
                'Человек-художественный образ': 0, 'Сам человек': 0}
    # # 1
    if row[0] == 'Выращивать и дрессировать служебных собак для поиска наркотиков':
        dct_type['Человек-природа'] += 1
    elif row[0] == 'Разрабатывать новые модели электронной бытовой техники':
        dct_type['Человек-техника'] += 1
    # 2
    if row[1] == 'Спасать людей после аварии и землетрясения':
        dct_type['Человек-другой человек'] += 1
    elif row[1] == 'Заверять документы, оформлять доверенности, договоры':
        dct_type['Человек-знаковая система'] += 1
    #
    # 3
    if row[2] == 'Петь в музыкальной группе':
        dct_type['Человек-художественный образ'] += 1
    elif row[2] == 'Интенсивно тренироваться, совершенствоваться и добиваться новых спортивных результатов':
        dct_type['Сам человек'] += 1

    # # 4
    if row[3] == 'Налаживать работу компьютеров и оборудования':
        dct_type['Человек-техника'] += 1
    elif row[3] == 'Рассказывать о товаре, убеждать людей приобретать его':
        dct_type['Человек-другой человек'] += 1
    #
    # 5
    if row[4] == 'Переводить научные тексты':
        dct_type['Человек-знаковая система'] += 1
    elif row[4] == 'Писать рассказы, сценарии, фельетоны':
        dct_type['Человек-художественный образ'] += 1
    # 6
    if row[5] == 'Тренировать свой организм, чтобы он выдерживал воздействие больших физических нагрузок':
        dct_type['Сам человек'] += 1
    elif row[
        5] == 'Разрабатывать мероприятия по охране редких растений':
        dct_type['Человек-природа'] += 1

    # # 7
    if row[6] == 'Ремонтировать оргтехнику, компьютеры, телефоны':
        dct_type['Человек-техника'] += 1
    elif row[
        6] == 'Исправлять смысловые и стилистические ошибки в готовящихся к печати текстах':
        dct_type['Человек-знаковая система'] += 1

    # 8
    if row[7] == 'Заниматься флористикой, оформлять помещения цветами':
        dct_type['Человек-художественный образ'] += 1
    elif row[7] == 'Анализировать состояние растений и животных в загрязненных условиях среды':
        dct_type['Человек-природа'] += 1

    # 9
    if row[8] == 'Управлять автомобилем, автобусом, трейлером, локомотивом поезда':
        dct_type['Человек-техника'] += 1
    elif row[8] == 'Микшировать музыку или корректировать фотоснимки с помощью компьютера':
        dct_type['Человек-художественный образ'] += 1

    # 10
    if row[
        9] == 'Ежедневно тренировать свои атлетические навыки в спортивном зале, в бассейне, на стадионе, корте и т. д.':
        dct_type['Сам человек'] += 1
    elif row[9] == 'Отлаживать работу спортивного автомобиля и заменять механизмы в случае неисправности':
        dct_type['Человек-техника'] += 1

    # 11
    if row[10] == 'Давать людям консультации по туристическим маршрутам других городов и стран':
        dct_type['Человек-другой человек'] += 1
    elif row[10] == 'Оформлять витрины универмагов; заниматься оформлением концертов и шоу':
        dct_type['Человек-художественный образ'] += 1

    # 12
    if row[11] == 'Разводить декоративных рыб и ухаживать за аквариумами в офисах':
        dct_type['Человек-природа'] += 1
    elif row[11] == 'Оказывать людям медицинскую помощь':
        dct_type['Человек-другой человек'] += 1

    # 13
    if row[12] == 'Упорядочивать документацию фирмы и подготавливать новую (договора, счета, ведомости, доверенности)':
        dct_type['Человек-знаковая система'] += 1
    elif row[
        12] == 'Вырабатывать навыки красивой походки и пластичных движений для профессионального выступления на подиуме':
        dct_type['Сам человек'] += 1

    # 14
    if row[13] == 'Изучать генетику, выводить новые сорта растений':
        dct_type['Человек-природа'] += 1
    elif row[13] == 'Работать в фондах архивов, находить необходимые документы':
        dct_type['Человек-знаковая система'] += 1

    # 15
    if row[14] == 'Сопровождать людей в сложных туристических походах в роли инструктора':
        dct_type['Человек-другой человек'] += 1
    elif row[14] == 'Придумывать и отрабатывать сложные акробатические трюки, спортивные номера':
        dct_type['Сам человек'] += 1

    # 16
    if row[15] == 'Лечить кошек, собак, лошадей и пр.':
        dct_type['Человек-природа'] += 1
    elif row[15] == 'Осуществлять сборку компьютеров':
        dct_type['Человек-техника'] += 1

    # 17
    if row[16] == 'Искать нужных людей, проводить подбор персонала в различные фирмы':
        dct_type['Человек-другой человек'] += 1
    elif row[16] == 'Проводить финансовый анализ рынка ценных бумаг':
        dct_type['Человек-знаковая система'] += 1

    # 18
    if row[17] == 'Играть на сцене, сниматься в кино, ставить трюки':
        dct_type['Человек-художественный образ'] += 1
    elif row[17] == 'Тренировать и репетировать красивые и точные движения перед спортивным выступлением':
        dct_type['Сам человек'] += 1

    # 19
    if row[18] == 'Налаживать работу медицинского лазера, ультразвуковой аппаратуры':
        dct_type['Человек-техника'] += 1
    elif row[18] == 'Преподавать различные предметы в школе, техникуме, институте и т. д.':
        dct_type['Человек-другой человек'] += 1

    # 20
    if row[19] == 'Рассчитывать экономный путь транспортировки товара до потребителя':
        dct_type['Человек-знаковая система'] += 1
    elif row[19] == 'Оформлять иллюстрациями сайты, книги, журналы':
        dct_type['Человек-художественный образ'] += 1

    # 21
    if row[20] == 'Осуществлять постоянную психологическую и физическую подготовку к соревнованиям, турнирам':
        dct_type['Сам человек'] += 1
    elif row[20] == 'Участвовать в экспедициях, посвященных изучению природных явлений':
        dct_type['Человек-природа'] += 1

    # 22
    if row[21] == 'Строить дома по планам, делать разводку электричества в соответствии с проектом':
        dct_type['Человек-техника'] += 1
    elif row[21] == 'Работать с финансовыми законами и кодексами':
        dct_type['Человек-знаковая система'] += 1

    # 23
    if row[22] == 'Проектировать садово-парковые зоны, оформлять участки с помощью растений':
        dct_type['Человек-художественный образ'] += 1
    elif row[22] == 'Анализировать молекулярный состав крови':
        dct_type['Человек-природа'] += 1

    # 24
    if row[23] == 'Проектировать новое производственное оборудование, дома':
        dct_type['Человек-техника'] += 1
    elif row[23] == 'Производить архитектурно восстановительные работы исторических мест':
        dct_type['Человек-художественный образ'] += 1

    # 25
    if row[24] == 'Оттачивать мастерство выполнения спортивного упражнения, превозмогая усталость и страх':
        dct_type['Сам человек'] += 1
    elif row[24] == 'Разрабатывать новые модели спортивных тренажеров, велосипедов и другое спортивное оборудование':
        dct_type['Человек-техника'] += 1

    # 26
    if row[25] == 'Организовывать праздники, выступать в роли тамады':
        dct_type['Человек-знаковая система'] += 1
    elif row[25] == 'Вести концертные программы, объявлять зрителям имена выступающих и названия номеров':
        dct_type['Человек-художественный образ'] += 1

    # 27
    if row[26] == 'Изучать жизнь организмов с помощью электронного микроскопа':
        dct_type['Человек-природа'] += 1
    elif row[26] == 'Оказывать людям психологическую помощь, работая на телефоне доверия':
        dct_type['Человек-другой человек'] += 1

    # 28
    if row[27] == 'Обрабатывать, анализировать и обобщать социологические данные':
        dct_type['Человек-знаковая система'] += 1
    elif row[27] == 'Профессионально работать над красотой своей фигуры и внешности':
        dct_type['Сам человек'] += 1

    # 29
    if row[28] == 'Разрабатывать средства защиты растений от вредителей и вирусов':
        dct_type['Человек-природа'] += 1
    elif row[28] == 'Писать компьютерные программы':
        dct_type['Человек-знаковая система'] += 1

    # 30
    if row[29] == 'Консультировать людей в фитнес-зале, в бассейне, на спортивной площадке':
        dct_type['Человек-другой человек'] += 1
    elif row[29] == 'Тренировать общую выносливость и совершенствовать отдельные спортивные или артистические навыки':
        dct_type['Сам человек'] += 1

    # сортируем по убыванию
    result_lst = sorted(dct_type.items(), key=lambda t: t[1], reverse=True)
    begin_str = '\n'
    # создаем строку с результатами
    for sphere, value in result_lst:
        begin_str += f'{sphere}: {value};\n'

    return begin_str


def processing_ddo(result_df: pd.DataFrame, answers_df: pd.DataFrame,lst_svod_cols:list):
    """
    Функция для обработки
    :param result_df: часть датафрейма с описательными колонками
    :param answers_df: часть датафрейма с ответами
    :param lst_svod_cols:  список с колонками по которым нужно делать свод
    """
    out_answer_df = result_df.copy()  # делаем копию для последующего соединения с сырыми ответами
    if answers_df.shape[1] != 30:
        raise BadCountColumnsDDO
    # Переименовываем колонки
    answers_df.columns = [f'Вопрос_ №{i}' for i in range(1, 31)]



